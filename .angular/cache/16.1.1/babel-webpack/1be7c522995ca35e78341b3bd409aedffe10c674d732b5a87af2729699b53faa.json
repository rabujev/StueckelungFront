{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../denom-values\";\nimport * as i2 from \"src/app/services/form.service\";\nimport * as i3 from \"@angular/common\";\nfunction ResultTableComponent_tr_17_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const result_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, result_r2.key, \"EUR\"));\n  }\n}\nfunction ResultTableComponent_tr_17_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const result_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(result_r2.value);\n  }\n}\nfunction ResultTableComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, ResultTableComponent_tr_17_td_1_Template, 3, 4, \"td\", 9);\n    i0.ɵɵtemplate(2, ResultTableComponent_tr_17_td_2_Template, 2, 1, \"td\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const result_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", result_r2.value != 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", result_r2.value != 0);\n  }\n}\nfunction ResultTableComponent_tr_35_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const difference_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, difference_r7.key, \"EUR\"));\n  }\n}\nfunction ResultTableComponent_tr_35_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const difference_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(difference_r7.value);\n  }\n}\nfunction ResultTableComponent_tr_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, ResultTableComponent_tr_35_td_1_Template, 3, 4, \"td\", 13);\n    i0.ɵɵtemplate(2, ResultTableComponent_tr_35_td_2_Template, 2, 1, \"td\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const difference_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", difference_r7.value != \"0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", difference_r7.value != \"0\");\n  }\n}\nexport class ResultTableComponent {\n  //Injecting the object for possible denominations + the object form service\n  // and using parameter Properties to simultaneously define both as a property\n  constructor(denomValues, formService) {\n    this.denomValues = denomValues;\n    this.formService = formService;\n    //Initial Map with denoms as keys and 0 as values for now\n    //private denoms: Map<number, number> = this.denomValues.denomMap();\n    this.result = new Map(this.denomValues.denomMap());\n    this.previousResult = new Map();\n    this.previousAmount = null;\n    this.difference = new Map();\n  }\n  ngOnInit() {\n    this.formService.submittedForm.subscribe(submitted => {\n      this.formService.updateTables(submitted[0], this.previousAmount, this.result, this.previousResult, submitted[1], this.difference);\n      this.previousAmount = submitted[0];\n    });\n  }\n}\nResultTableComponent.ɵfac = function ResultTableComponent_Factory(t) {\n  return new (t || ResultTableComponent)(i0.ɵɵdirectiveInject(i1.DenomValues), i0.ɵɵdirectiveInject(i2.FormService));\n};\nResultTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResultTableComponent,\n  selectors: [[\"app-result-table\"]],\n  decls: 37,\n  vars: 7,\n  consts: [[1, \"container-fluid\"], [1, \"row\", \"justify-content-start\"], [1, \"col-sm-4\"], [1, \"table\", \"table-borderless\", \"w-auto\"], [1, \"table\"], [1, \"table\", \"table-bordered\", \"table-striped\", \"w-auto\"], [1, \"table-dark\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col\"], [\"class\", \"table-primaryalign-middle text-end\", 4, \"ngIf\"], [\"class\", \"align-middle text-center\", 4, \"ngIf\"], [1, \"table-primaryalign-middle\", \"text-end\"], [1, \"align-middle\", \"text-center\"], [\"class\", \"align-middle text-end\", 4, \"ngIf\"], [1, \"align-middle\", \"text-end\"]],\n  template: function ResultTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"table\", 3)(4, \"thead\", 4)(5, \"tr\")(6, \"td\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"td\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"table\", 5)(10, \"thead\", 6)(11, \"tr\")(12, \"th\");\n      i0.ɵɵtext(13, \" Schein/M\\u00FCnze \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \" Anzahl \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, ResultTableComponent_tr_17_Template, 3, 2, \"tr\", 7);\n      i0.ɵɵpipe(18, \"keyvalue\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 8)(20, \"table\", 3)(21, \"thead\", 4)(22, \"tr\")(23, \"td\");\n      i0.ɵɵtext(24, \" Differenz zu \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"td\");\n      i0.ɵɵtext(26, \" yyy \\u20AC \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(27, \"table\", 5)(28, \"thead\", 6)(29, \"tr\")(30, \"th\");\n      i0.ɵɵtext(31, \" Schein/M\\u00FCnze \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"th\");\n      i0.ɵɵtext(33, \" Anzahl \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(34, \"tbody\");\n      i0.ɵɵtemplate(35, ResultTableComponent_tr_35_Template, 3, 2, \"tr\", 7);\n      i0.ɵɵpipe(36, \"keyvalue\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\" Neue St\\u00FCckelung \", ctx.previousAmount, \" \\u20AC \");\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(18, 3, ctx.result).slice().reverse());\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(36, 5, ctx.difference).slice().reverse());\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i3.CurrencyPipe, i3.KeyValuePipe],\n  styles: [\".table[_ngcontent-%COMP%]   td.fit[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   th.fit[_ngcontent-%COMP%] {\\n    white-space: nowrap;\\n    width: 1%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29yZS9yZXN1bHQtdGFibGUvcmVzdWx0LXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksbUJBQW1CO0lBQ25CLFNBQVM7QUFDYiIsInNvdXJjZXNDb250ZW50IjpbIi50YWJsZSB0ZC5maXQsIFxyXG4udGFibGUgdGguZml0IHtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICB3aWR0aDogMSU7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","result_r2","key","value","ɵɵtemplate","ResultTableComponent_tr_17_td_1_Template","ResultTableComponent_tr_17_td_2_Template","ɵɵproperty","difference_r7","ResultTableComponent_tr_35_td_1_Template","ResultTableComponent_tr_35_td_2_Template","ResultTableComponent","constructor","denomValues","formService","result","Map","denomMap","previousResult","previousAmount","difference","ngOnInit","submittedForm","subscribe","submitted","updateTables","ɵɵdirectiveInject","i1","DenomValues","i2","FormService","selectors","decls","vars","consts","template","ResultTableComponent_Template","rf","ctx","ɵɵelement","ResultTableComponent_tr_17_Template","ResultTableComponent_tr_35_Template","ɵɵtextInterpolate1","ɵɵpipeBind1","slice","reverse"],"sources":["C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\result-table\\result-table.component.ts","C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\result-table\\result-table.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DenomValues } from '../denom-values';\nimport { FormService } from 'src/app/services/form.service';\n\n\n\n@Component({\n  selector: 'app-result-table',\n  templateUrl: './result-table.component.html',\n  styleUrls: ['./result-table.component.css']\n})\nexport class ResultTableComponent {\n\n  //Injecting the object for possible denominations + the object form service\n  // and using parameter Properties to simultaneously define both as a property\n  \n  constructor(private denomValues: DenomValues,\n              private formService: FormService) {};\n\n  //Initial Map with denoms as keys and 0 as values for now\n\n  //private denoms: Map<number, number> = this.denomValues.denomMap();\n  \n  result: Map<number, number> = new Map(this.denomValues.denomMap());\n\n  previousResult: Map<number, number> = new Map();\n\n  previousAmount: number | null = null;\n\n  difference: Map<number, string> = new Map();\n\n\n\n  ngOnInit() {\n    this.formService.submittedForm.subscribe( \n      submitted => {\n        this.formService.updateTables( submitted[0], this.previousAmount, this.result, this.previousResult, submitted[1], this.difference);\n        this.previousAmount = submitted[0];\n      }\n    );\n  }\n\n  \n  \n\n\n\n}\n","<div class=\"container-fluid\"> <!-- using bootstrap grid system-->\n\n\n    <div class=\"row justify-content-start\">\n        <div class=\"col-sm-4\"> <!-- sm is for responsive for phone-->\n\n            <table class=\"table table-borderless w-auto\">\n\n                <thead class=\"table\">\n                    <tr>\n                        <td> Neue Stückelung {{previousAmount}}   € </td>\n                        <td> </td>\n                    </tr>\n                </thead>\n            </table>\n\n            <table class=\"table table-bordered table-striped w-auto\">\n\n                <thead class=\"table-dark\">\n                    <tr>\n                        <th> Schein/Münze </th>\n                        <th> Anzahl </th>\n\n\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <!-- using |keyvalue angular pipe to transsform map into array \n                                to not use map iterator that would cause errors  +  using slice().reverse() for correct order-->\n                    <tr *ngFor=\"let result of (result | keyvalue).slice().reverse()\">\n\n                        <td *ngIf=\"(result.value != 0)\" class=\"table-primaryalign-middle text-end\">{{ result.key | currency:'EUR' }}</td>\n                        <td *ngIf=\"(result.value != 0)\" class=\"align-middle text-center\">{{ result.value }}</td>\n\n                    </tr>\n\n                </tbody>\n\n            </table>\n\n        </div>\n\n        <div class=\"col\">\n            <table class=\"table table-borderless w-auto\">\n\n                <thead class=\"table\">\n                    <tr>\n                        <td> Differenz zu </td>\n                        <td> yyy € </td>\n                    </tr>\n                </thead>\n            </table>\n            <table class=\"table table-bordered table-striped w-auto\">\n\n                <thead class=\"table-dark\">\n                    <tr>\n                        <th> Schein/Münze </th>\n                        <th> Anzahl </th>\n\n\n                    </tr>\n                </thead>\n\n                <tbody>\n        \n                    \n                    <tr *ngFor=\"let difference of (difference | keyvalue).slice().reverse()\">\n                        \n                            <td *ngIf=\"(difference.value != '0')\" class=\"align-middle text-end\">{{ difference.key | currency:'EUR' }}</td>\n                            <td *ngIf=\"(difference.value != '0')\" class=\"align-middle text-center\">{{ difference.value }}</td>\n                        \n                        \n\n                    </tr>\n                </tbody>\n\n            </table>\n        </div>\n    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}