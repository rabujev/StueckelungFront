{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AmountInputFormComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AmountInputFormComponent_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" pattern \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AmountInputFormComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, AmountInputFormComponent_div_4_div_1_Template, 2, 0, \"div\", 7);\n    i0.ɵɵtemplate(2, AmountInputFormComponent_div_4_div_2_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.amount.errors == null ? null : ctx_r0.amount.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.amount.errors == null ? null : ctx_r0.amount.errors[\"pattern\"]);\n  }\n}\nexport class AmountInputFormComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    //this is a Subject (multicastable Observable) others can subscribe to receive its value whenever updated.\n    this.validAmount = new Subject();\n  }\n  ngOnInit() {\n    this.inputForm = this.formBuilder.group({\n      amount: new FormControl('', [Validators.required, Validators.pattern(\"^\\\\d+([\\\\.,][0-9]{1,2})?$\")])\n    }); //js the backslash has to be escaped\n  }\n  //behaviour of submit button => if validation is passed => amount published to observer (tables)\n  onSubmit() {\n    if (this.inputForm.valid) {\n      console.log(\"submitted (valid)\");\n      this.validAmount.next(this.amount.value);\n    }\n  }\n  get amount() {\n    return this.inputForm.get('amount');\n  }\n}\nAmountInputFormComponent.ɵfac = function AmountInputFormComponent_Factory(t) {\n  return new (t || AmountInputFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAmountInputFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AmountInputFormComponent,\n  selectors: [[\"app-amount-input-form\"]],\n  decls: 7,\n  vars: 2,\n  consts: [[1, \"section-content\", \"section-content-p30\"], [1, \"container-fluid\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"amount\", \"type\", \"text\", \"placeholder\", \"Amount\", \"required\", \"\", 1, \"form-control\", \"mb-4\", \"w-25\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"col-1\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n  template: function AmountInputFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AmountInputFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵtemplate(4, AmountInputFormComponent_div_4_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementStart(5, \"button\", 5);\n      i0.ɵɵtext(6, \"Calculate\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.inputForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.amount.invalid && (ctx.amount.dirty || ctx.amount.touched));\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","Validators","Subject","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AmountInputFormComponent_div_4_div_1_Template","AmountInputFormComponent_div_4_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","amount","errors","AmountInputFormComponent","constructor","formBuilder","validAmount","ngOnInit","inputForm","group","required","pattern","onSubmit","valid","console","log","next","value","get","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","AmountInputFormComponent_Template","rf","ctx","ɵɵlistener","AmountInputFormComponent_Template_form_ngSubmit_2_listener","ɵɵelement","AmountInputFormComponent_div_4_Template","invalid","dirty","touched"],"sources":["C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\amount-input-form\\amount-input-form.component.ts","C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\amount-input-form\\amount-input-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n\n@Component({\n  selector: 'app-amount-input-form',\n  templateUrl: './amount-input-form.component.html',\n  styleUrls: ['./amount-input-form.component.css']\n})\nexport class AmountInputFormComponent {\n\n  inputForm!: FormGroup;\n\n\n  //this is a Subject (multicastable Observable) others can subscribe to receive its value whenever updated.\n  validAmount: Subject<number> = new Subject<number>;\n  \n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.inputForm = this.formBuilder.group({\n      amount: new FormControl('', [Validators.required, \n                                   Validators.pattern(\"^\\\\d+([\\\\.,][0-9]{1,2})?$\")])\n    });  //js the backslash has to be escaped\n  }\n    \n    //behaviour of submit button => if validation is passed => amount published to observer (tables)\n  onSubmit() {\n    if (this.inputForm.valid) {\n      console.log(\"submitted (valid)\");\n      this.validAmount.next(this.amount.value);\n    }\n    \n\n  }\n\n  get amount() {\n    return this.inputForm.get('amount')!;\n  }\n\n}\n\n\n","<div class=\"section-content section-content-p30\">\n    <div class=\"container-fluid\">\n        <form [formGroup]=\"inputForm\" (ngSubmit)=\"onSubmit()\">\n\n\n            <input formControlName=\"amount\" type=\"text\" class=\"form-control mb-4 w-25\" placeholder=\"Amount\"\n                required>\n\n            <!-- VALIDATION ERROR MESSAGE -->\n            <div *ngIf=\"amount.invalid && (amount.dirty || amount.touched)\" class=\"alert alert-danger\">\n                <div *ngIf=\"amount.errors?.['required']\">\n                    Required\n                </div>\n                <div *ngIf=\"amount.errors?.['pattern']\">\n                    pattern\n                </div>\n            </div>\n\n\n            <!-- Submit Button -->\n            <button type=\"submit\" class=\"btn btn-info col-1\">Calculate</button>\n\n        </form>\n    </div>\n</div>"],"mappings":"AACA,SAAsBA,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AAChF,SAASC,OAAO,QAAQ,MAAM;;;;;;ICQdC,EAAA,CAAAC,cAAA,UAAyC;IACrCD,EAAA,CAAAE,MAAA,iBACJ;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IACNH,EAAA,CAAAC,cAAA,UAAwC;IACpCD,EAAA,CAAAE,MAAA,gBACJ;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IANVH,EAAA,CAAAC,cAAA,aAA2F;IACvFD,EAAA,CAAAI,UAAA,IAAAC,6CAAA,iBAEM;IACNL,EAAA,CAAAI,UAAA,IAAAE,6CAAA,iBAEM;IACVN,EAAA,CAAAG,YAAA,EAAM;;;;IANIH,EAAA,CAAAO,SAAA,GAAiC;IAAjCP,EAAA,CAAAQ,UAAA,SAAAC,MAAA,CAAAC,MAAA,CAAAC,MAAA,kBAAAF,MAAA,CAAAC,MAAA,CAAAC,MAAA,aAAiC;IAGjCX,EAAA,CAAAO,SAAA,GAAgC;IAAhCP,EAAA,CAAAQ,UAAA,SAAAC,MAAA,CAAAC,MAAA,CAAAC,MAAA,kBAAAF,MAAA,CAAAC,MAAA,CAAAC,MAAA,YAAgC;;;ADHtD,OAAM,MAAOC,wBAAwB;EAQnCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B;IACA,KAAAC,WAAW,GAAoB,IAAIhB,OAAe,CAAf,CAAe;EAEH;EAE/CiB,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtCR,MAAM,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACqB,QAAQ,EACnBrB,UAAU,CAACsB,OAAO,CAAC,2BAA2B,CAAC,CAAC;KAC9E,CAAC,CAAC,CAAE;EACP;EAEE;EACFC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;MACxBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC,IAAI,CAACT,WAAW,CAACU,IAAI,CAAC,IAAI,CAACf,MAAM,CAACgB,KAAK,CAAC;;EAI5C;EAEA,IAAIhB,MAAMA,CAAA;IACR,OAAO,IAAI,CAACO,SAAS,CAACU,GAAG,CAAC,QAAQ,CAAE;EACtC;;AA7BWf,wBAAwB,C;mBAAxBA,wBAAwB,EAAAZ,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAxBlB,wBAAwB,C;QAAxBA,wBAAwB;EAAAmB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVrCrC,EAAA,CAAAC,cAAA,aAAiD;MAEXD,EAAA,CAAAuC,UAAA,sBAAAC,2DAAA;QAAA,OAAYF,GAAA,CAAAjB,QAAA,EAAU;MAAA,EAAC;MAGjDrB,EAAA,CAAAyC,SAAA,eACa;MAGbzC,EAAA,CAAAI,UAAA,IAAAsC,uCAAA,iBAOM;MAIN1C,EAAA,CAAAC,cAAA,gBAAiD;MAAAD,EAAA,CAAAE,MAAA,gBAAS;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAlBjEH,EAAA,CAAAO,SAAA,GAAuB;MAAvBP,EAAA,CAAAQ,UAAA,cAAA8B,GAAA,CAAArB,SAAA,CAAuB;MAOnBjB,EAAA,CAAAO,SAAA,GAAwD;MAAxDP,EAAA,CAAAQ,UAAA,SAAA8B,GAAA,CAAA5B,MAAA,CAAAiC,OAAA,KAAAL,GAAA,CAAA5B,MAAA,CAAAkC,KAAA,IAAAN,GAAA,CAAA5B,MAAA,CAAAmC,OAAA,EAAwD"},"metadata":{},"sourceType":"module","externalDependencies":[]}