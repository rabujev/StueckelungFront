{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../denom-values\";\nimport * as i2 from \"src/app/services/form.service\";\nimport * as i3 from \"@angular/common\";\nfunction ResultTableComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const denom_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 2, denom_r2[0], \"EUR\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(denom_r2[1]);\n  }\n}\nfunction ResultTableComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const denom_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 2, denom_r3[0], \"EUR\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(denom_r3[1]);\n  }\n}\nexport class ResultTableComponent {\n  //Injecting the object for possible denominations + the object form service\n  // and using parameter Properties to simultaneously define both as a property\n  constructor(denomValues, formService) {\n    this.denomValues = denomValues;\n    this.formService = formService;\n    //Initial Map with denoms as keys and 0 as values for now\n    this.initialDenoms = this.denomValues.denomMap();\n    this.result = new Map(this.denomValues.denomMap());\n    this.difference = new Map();\n    this.useBackend = false;\n    this.resultArray = [];\n  }\n  ngOnInit() {\n    for (let entry of this.result.entries()) {}\n  }\n}\nResultTableComponent.ɵfac = function ResultTableComponent_Factory(t) {\n  return new (t || ResultTableComponent)(i0.ɵɵdirectiveInject(i1.DenomValues), i0.ɵɵdirectiveInject(i2.FormService));\n};\nResultTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResultTableComponent,\n  selectors: [[\"app-result-table\"]],\n  decls: 21,\n  vars: 2,\n  consts: [[1, \"main-content\"], [1, \"section-content\", \"section-content-p30\"], [1, \"container-fluid\"], [1, \"table\", \"table-bordered\"], [1, \"table-dark\"], [4, \"ngFor\", \"ngForOf\"], [1, \"align-middle\"]],\n  template: function ResultTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"table\", 3)(4, \"thead\", 4)(5, \"tr\")(6, \"th\");\n      i0.ɵɵtext(7, \" Schein/M\\u00FCnze \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \" Anzahl \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"tbody\");\n      i0.ɵɵtemplate(11, ResultTableComponent_tr_11_Template, 6, 5, \"tr\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"table\", 3)(13, \"thead\", 4)(14, \"tr\")(15, \"th\");\n      i0.ɵɵtext(16, \" Schein/M\\u00FCnze \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \" Anzahl \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, ResultTableComponent_tr_20_Template, 6, 5, \"tr\", 5);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.result.entries());\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.difference.entries());\n    }\n  },\n  dependencies: [i3.NgForOf, i3.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","denom_r2","denom_r3","ResultTableComponent","constructor","denomValues","formService","initialDenoms","denomMap","result","Map","difference","useBackend","resultArray","ngOnInit","entry","entries","ɵɵdirectiveInject","i1","DenomValues","i2","FormService","selectors","decls","vars","consts","template","ResultTableComponent_Template","rf","ctx","ɵɵtemplate","ResultTableComponent_tr_11_Template","ResultTableComponent_tr_20_Template","ɵɵproperty"],"sources":["C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\result-table\\result-table.component.ts","C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\result-table\\result-table.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DenomValues } from '../denom-values';\nimport { FormService } from 'src/app/services/form.service';\n\n\n\n@Component({\n  selector: 'app-result-table',\n  templateUrl: './result-table.component.html',\n  styleUrls: ['./result-table.component.css']\n})\nexport class ResultTableComponent {\n\n  //Injecting the object for possible denominations + the object form service\n  // and using parameter Properties to simultaneously define both as a property\n  constructor(private denomValues: DenomValues,\n              private formService: FormService) {};\n\n  //Initial Map with denoms as keys and 0 as values for now\n  private initialDenoms: Map<number, number> = this.denomValues.denomMap();\n  \n  result: Map<number, number> = new Map(this.denomValues.denomMap());\n\n  difference: Map<number, string> = new Map();\n\n  private useBackend: boolean = false;\n\n  resultArray: number[] = [];\n\n\n  ngOnInit() {\n    for (let entry of this.result.entries()) {\n\n    \n  }\n  \n\n\n\n\n}\n","<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n        \n\n\n            <table class=\"table table-bordered\">\n            \n                <thead class=\"table-dark\">\n                    <tr>\n                        <th> Schein/Münze </th>\n                        <th> Anzahl </th>\n\n                        \n                    </tr>\n                </thead>\n            \n                <tbody>\n            <tr *ngFor=\"let denom of result.entries()\">\n                \n                <td class =\"align-middle\">{{ denom[0] | currency:'EUR' }}</td>\n                <td class =\"align-middle\">{{ denom[1] }}</td>\n                \n            </tr>\n            \n                </tbody>\n            \n            </table>\n\n            <table class=\"table table-bordered\">\n            \n                <thead class=\"table-dark\">\n                    <tr>\n                        <th> Schein/Münze </th>\n                        <th> Anzahl </th>\n\n                        \n                    </tr>\n                </thead>\n            \n                <tbody>\n            <tr *ngFor=\"let denom of difference.entries()\">\n                \n                <td class =\"align-middle\">{{ denom[0] | currency:'EUR' }}</td>\n                <td class =\"align-middle\">{{ denom[1] }}</td>\n                \n            </tr>\n            \n                </tbody>\n            \n            </table>\n\n            \n            \n\n        </div>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}