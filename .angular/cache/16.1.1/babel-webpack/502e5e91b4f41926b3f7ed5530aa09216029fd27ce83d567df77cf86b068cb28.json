{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../denom-values\";\nimport * as i2 from \"@angular/common\";\nfunction ResultTableComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const denom_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(denom_r1.value[0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(denom_r1.value[1]);\n  }\n}\nexport class ResultTableComponent {\n  //Injecting the object for possible denominations\n  // and using parameter Properties to simultaneously define it as a property\n  constructor(denomValues) {\n    this.denomValues = denomValues;\n    //Initial Map with denoms as keys and 0 as values for now\n    this.initialDenoms = this.denomValues.denomMap();\n    this.result = new Map(this.denomValues.denomMap());\n    this.difference = new Map();\n    this.useBackend = false;\n  }\n  ngOnInit() {}\n  //Fills result Map with the amounts of notes and coins \n  calcResult(total) {\n    if (this.useBackend) {} else {\n      let previousResult = new Map(this.result);\n      let rest = total;\n      //for each currency denomination, calculates how many of them fit in the rest amount and fills result map\n      for (let key of this.result.keys()) {\n        let value = Math.floor(rest / key);\n        this.result.set(key, value);\n        rest = rest % key;\n      }\n      //calculating the difference\n      if (previousResult.size > 0) {}\n    }\n  }\n}\nResultTableComponent.ɵfac = function ResultTableComponent_Factory(t) {\n  return new (t || ResultTableComponent)(i0.ɵɵdirectiveInject(i1.DenomValues));\n};\nResultTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResultTableComponent,\n  selectors: [[\"app-result-table\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"main-content\"], [1, \"section-content\", \"section-content-p30\"], [1, \"container-fluid\"], [1, \"table\", \"table-bordered\"], [1, \"table-dark\"], [4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/cats/add\", 1, \"btn\", \"btn-primary\"], [1, \"align-middle\"]],\n  template: function ResultTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"p\");\n      i0.ɵɵtext(4, \"kats-list works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"table\", 3)(6, \"thead\", 4)(7, \"tr\")(8, \"th\");\n      i0.ɵɵtext(9, \" Schein/M\\u00FCnze \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \" Anzahl \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"tbody\");\n      i0.ɵɵtemplate(13, ResultTableComponent_tr_13_Template, 5, 2, \"tr\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"a\", 6);\n      i0.ɵɵtext(15, \" Add Kat\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.result.entries());\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","denom_r1","value","ResultTableComponent","constructor","denomValues","initialDenoms","denomMap","result","Map","difference","useBackend","ngOnInit","calcResult","total","previousResult","rest","key","keys","Math","floor","set","size","ɵɵdirectiveInject","i1","DenomValues","selectors","decls","vars","consts","template","ResultTableComponent_Template","rf","ctx","ɵɵtemplate","ResultTableComponent_tr_13_Template","ɵɵproperty","entries"],"sources":["C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\result-table\\result-table.component.ts","C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\result-table\\result-table.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DenomValues } from '../denom-values';\n\n\n@Component({\n  selector: 'app-result-table',\n  templateUrl: './result-table.component.html',\n  styleUrls: ['./result-table.component.css']\n})\nexport class ResultTableComponent {\n\n  //Injecting the object for possible denominations\n  // and using parameter Properties to simultaneously define it as a property\n  constructor(private denomValues: DenomValues) {};\n\n  //Initial Map with denoms as keys and 0 as values for now\n  private initialDenoms: Map<number, number> = this.denomValues.denomMap();\n  \n  result: Map<number, number> = new Map(this.denomValues.denomMap());\n\n  difference: Map<number, string> = new Map();\n\n  private useBackend: boolean = false;\n\n\n  ngOnInit(): void {\n  }\n  \n  //Fills result Map with the amounts of notes and coins \n  calcResult(total: number) {\n\n    if (this.useBackend) {\n      \n     }\n    else {\n\n      let previousResult = new Map(this.result);\n      \n      let rest: number = total;\n      //for each currency denomination, calculates how many of them fit in the rest amount and fills result map\n      for (let key of this.result.keys()) {\n        let value: number = Math.floor(rest/key);\n        this.result.set(key, value)\n\n        rest = rest%key;\n      }\n      //calculating the difference\n      if (previousResult.size > 0) {\n\n      }\n\n      \n    }\n\n\n    \n\n  }\n\n\n}\n","<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n            \n            <p>kats-list works!</p>\n\n\n            <table class=\"table table-bordered\">\n            \n                <thead class=\"table-dark\">\n                    <tr>\n                        <th> Schein/Münze </th>\n                        <th> Anzahl </th>\n\n                        \n                    </tr>\n                </thead>\n            \n                <tbody>\n            <tr *ngFor=\"let denom of result.entries()\">\n                \n                <td class =\"align-middle\">{{ denom.value[0] }}</td>\n                <td class =\"align-middle\">{{ denom.value[1] }}</td>\n                \n            </tr>\n            \n                </tbody>\n            \n            </table>\n            \n            <a routerLink='/cats/add' class=\"btn btn-primary\"> Add Kat</a>\n\n        </div>\n    </div>\n</div>\n"],"mappings":";;;;;ICmBYA,EAAA,CAAAC,cAAA,SAA2C;IAEbD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACnDH,EAAA,CAAAC,cAAA,YAA0B;IAAAD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IADzBH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAC,KAAA,IAAoB;IACpBP,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAC,KAAA,IAAoB;;;ADb9D,OAAM,MAAOC,oBAAoB;EAE/B;EACA;EACAC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAE/B;IACQ,KAAAC,aAAa,GAAwB,IAAI,CAACD,WAAW,CAACE,QAAQ,EAAE;IAExE,KAAAC,MAAM,GAAwB,IAAIC,GAAG,CAAC,IAAI,CAACJ,WAAW,CAACE,QAAQ,EAAE,CAAC;IAElE,KAAAG,UAAU,GAAwB,IAAID,GAAG,EAAE;IAEnC,KAAAE,UAAU,GAAY,KAAK;EATY;EAY/CC,QAAQA,CAAA,GACR;EAEA;EACAC,UAAUA,CAACC,KAAa;IAEtB,IAAI,IAAI,CAACH,UAAU,EAAE,C,CAEnB,MACG;MAEH,IAAII,cAAc,GAAG,IAAIN,GAAG,CAAC,IAAI,CAACD,MAAM,CAAC;MAEzC,IAAIQ,IAAI,GAAWF,KAAK;MACxB;MACA,KAAK,IAAIG,GAAG,IAAI,IAAI,CAACT,MAAM,CAACU,IAAI,EAAE,EAAE;QAClC,IAAIhB,KAAK,GAAWiB,IAAI,CAACC,KAAK,CAACJ,IAAI,GAACC,GAAG,CAAC;QACxC,IAAI,CAACT,MAAM,CAACa,GAAG,CAACJ,GAAG,EAAEf,KAAK,CAAC;QAE3Bc,IAAI,GAAGA,IAAI,GAACC,GAAG;;MAEjB;MACA,IAAIF,cAAc,CAACO,IAAI,GAAG,CAAC,EAAE,C;;EAUjC;;AAhDWnB,oBAAoB,C;mBAApBA,oBAAoB,EAAAR,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAApBtB,oBAAoB,C;QAApBA,oBAAoB;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTjCrC,EAAA,CAAAC,cAAA,aAA0B;MAIXD,EAAA,CAAAE,MAAA,uBAAgB;MAAAF,EAAA,CAAAG,YAAA,EAAI;MAGvBH,EAAA,CAAAC,cAAA,eAAoC;MAInBD,EAAA,CAAAE,MAAA,0BAAa;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACvBH,EAAA,CAAAC,cAAA,UAAI;MAACD,EAAA,CAAAE,MAAA,gBAAO;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAMzBH,EAAA,CAAAC,cAAA,aAAO;MACXD,EAAA,CAAAuC,UAAA,KAAAC,mCAAA,gBAKK;MAEDxC,EAAA,CAAAG,YAAA,EAAQ;MAIZH,EAAA,CAAAC,cAAA,YAAkD;MAACD,EAAA,CAAAE,MAAA,gBAAO;MAAAF,EAAA,CAAAG,YAAA,EAAI;;;MAXxCH,EAAA,CAAAI,SAAA,IAAmB;MAAnBJ,EAAA,CAAAyC,UAAA,YAAAH,GAAA,CAAAzB,MAAA,CAAA6B,OAAA,GAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}