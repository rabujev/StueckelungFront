{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/form.service\";\nimport * as i3 from \"@angular/common\";\nfunction AmountInputFormComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Feld ist erforderlich \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AmountInputFormComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"strong\");\n    i0.ɵɵtext(2, \"G\\u00FCltigen Betrag eingeben\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AmountInputFormComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, AmountInputFormComponent_div_7_div_1_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(2, AmountInputFormComponent_div_7_div_2_Template, 3, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.amount.errors == null ? null : ctx_r0.amount.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.amount.errors == null ? null : ctx_r0.amount.errors[\"pattern\"]);\n  }\n}\nexport class AmountInputFormComponent {\n  constructor(formBuilder, formService) {\n    this.formBuilder = formBuilder;\n    this.formService = formService;\n  }\n  get amount() {\n    return this.inputForm.get('amount');\n  }\n  //Create the form structure with the validation\n  ngOnInit() {\n    this.inputForm = this.formBuilder.group({\n      amount: new FormControl('', [Validators.required, Validators.pattern(\"^\\\\d+([\\\\.,][0-9]{1,2})?$\")]),\n      backend: new FormControl('')\n    }); //js the backslash has to be escaped\n  }\n  //behaviour of submit button => if validation is passed \n  //=> amount published to observer (tables)  via the injected service\n  onSubmit() {\n    if (this.inputForm.valid) {\n      console.log(\"submitted (valid)\");\n      this.formService.useBackend = false;\n      this.formService.validAmount.next(this.amount.value);\n    }\n  }\n}\nAmountInputFormComponent.ɵfac = function AmountInputFormComponent_Factory(t) {\n  return new (t || AmountInputFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FormService));\n};\nAmountInputFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AmountInputFormComponent,\n  selectors: [[\"app-amount-input-form\"]],\n  decls: 10,\n  vars: 2,\n  consts: [[1, \"mt-5\"], [1, \"container-fluid\"], [1, \"mb-4\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"amount\", \"type\", \"text\", \"placeholder\", \"Betrag in EUR\", \"required\", \"\", 1, \"form-control\", \"mb-4\", \"w-auto\"], [\"mat-button\", \"\", \"disabled\", \"\"], [\"mat-radio-button\", \"\", \"value\", \"primary\", 1, \"example-margin\"], [\"class\", \"alert alert-danger alert-dismissible fade show w-50\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\", \"w-50\"], [4, \"ngIf\"]],\n  template: function AmountInputFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AmountInputFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵelementStart(4, \"button\", 4);\n      i0.ɵɵtext(5, \"I am Disabled\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"button\", 5);\n      i0.ɵɵtemplate(7, AmountInputFormComponent_div_7_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementStart(8, \"button\", 7);\n      i0.ɵɵtext(9, \"Berechnen\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.inputForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.amount.invalid && (ctx.amount.dirty || ctx.amount.touched));\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AmountInputFormComponent_div_7_div_1_Template","AmountInputFormComponent_div_7_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","amount","errors","AmountInputFormComponent","constructor","formBuilder","formService","inputForm","get","ngOnInit","group","required","pattern","backend","onSubmit","valid","console","log","useBackend","validAmount","next","value","ɵɵdirectiveInject","i1","FormBuilder","i2","FormService","selectors","decls","vars","consts","template","AmountInputFormComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","AmountInputFormComponent_Template_form_ngSubmit_2_listener","AmountInputFormComponent_div_7_Template","invalid","dirty","touched"],"sources":["C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\amount-input-form\\amount-input-form.component.ts","C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\amount-input-form\\amount-input-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { FormService } from 'src/app/services/form.service';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatRadioModule} from '@angular/material/radio';\n\n\n\n\n\n@Component({\n  selector: 'app-amount-input-form',\n  templateUrl: './amount-input-form.component.html',\n  styleUrls: ['./amount-input-form.component.css'],\n  \n})\n\n\nexport class AmountInputFormComponent {\n\n  constructor(private formBuilder: FormBuilder,\n              private formService: FormService) {}\n\n\n  inputForm!: FormGroup;\n\n  get amount() {\n    return this.inputForm.get('amount')!;\n  }\n  \n\n  //Create the form structure with the validation\n  ngOnInit(): void {\n    this.inputForm = this.formBuilder.group({\n      amount: new FormControl('', [Validators.required, \n                                   Validators.pattern(\"^\\\\d+([\\\\.,][0-9]{1,2})?$\")]),\n      backend: new FormControl('')\n    });  //js the backslash has to be escaped\n  }\n    \n\n    //behaviour of submit button => if validation is passed \n    //=> amount published to observer (tables)  via the injected service\n  onSubmit() {\n    if (this.inputForm.valid) {\n      console.log(\"submitted (valid)\");\n      this.formService.useBackend = false;\n      this.formService.validAmount.next(this.amount.value); \n    }\n    \n  }\n\n  \n\n}\n\n\n","<div class=\"mt-5\"></div>\n    \n\n    <div class=\"container-fluid \">\n        <form [formGroup]=\"inputForm\" (ngSubmit)=\"onSubmit()\" class=\"mb-4\">\n\n            <input formControlName=\"amount\" type=\"text\" class=\"form-control mb-4 w-auto\" placeholder=\"Betrag in EUR\"\n                required>\n                <button mat-button disabled>I am Disabled</button>\n                <button mat-radio-button class=\"example-margin\" value=\"primary\"> </button>\n\n\n                \n\n            <!-- VALIDATION ERROR MESSAGE -->\n            <div *ngIf=\"amount.invalid && (amount.dirty || amount.touched)\" class=\"alert alert-danger alert-dismissible fade show w-50\">\n                <div *ngIf=\"amount.errors?.['required']\" >\n                    Feld ist erforderlich\n                </div>\n                <div *ngIf=\"amount.errors?.['pattern']\">\n                    <strong>Gültigen Betrag eingeben</strong>\n                </div>\n                <!-- \n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                -->\n\n            </div>\n\n\n            <!-- Submit Button -->\n            <button type=\"submit\" class=\"btn btn-primary\">Berechnen</button>\n\n        </form>\n    </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}