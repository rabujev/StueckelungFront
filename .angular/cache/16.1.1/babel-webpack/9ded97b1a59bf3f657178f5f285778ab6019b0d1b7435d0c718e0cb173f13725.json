{"ast":null,"code":"export class Dto {\n  //constructor converts maps into arrays of the values\n  constructor(total, result, previousResult) {\n    this.total = total;\n    this.result = [];\n    this.previousResult = [];\n    this.difference = [];\n    result.forEach((val, key) => {\n      this.result.push(val);\n    });\n    previousResult.forEach((val, key) => {\n      this.previousResult.push(val);\n    });\n  }\n  arrToMap(arr) {\n    let map = new Map();\n    return;\n  }\n  toString() {\n    console.log(\"total is : \" + this.total);\n    console.log(\"result is : \" + this.result);\n    console.log(\"previousResult is : \" + this.previousResult);\n    console.log(\"difference is : \" + this.difference);\n    return \"\";\n  }\n}","map":{"version":3,"names":["Dto","constructor","total","result","previousResult","difference","forEach","val","key","push","arrToMap","arr","map","Map","toString","console","log"],"sources":["C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\common\\dto.ts"],"sourcesContent":["import { DenomValues } from '../core/denom-values';\n\nexport class Dto {\n\n    \n    public result: number[] = [];\n    public previousResult: number[] = [];\n    public difference: string[] = [];\n    \n    //constructor converts maps into arrays of the values\n    constructor(public total: number, result: Map<number, number>, previousResult: Map<number, number>)\n        {\n            result.forEach((val: number, key: number) => {\n                this.result.push(val);\n            });\n            previousResult.forEach((val: number, key: number) => {\n                this.previousResult.push(val);\n            });\n            \n        }\n\n        public arrToMap(arr: number[]): Map<number, number | string> {\n            \n            let map = new Map()\n            \n            return;\n        }\n  \n        public toString(): string {\n            console.log(\"total is : \" + this.total);\n            console.log(\"result is : \" + this.result);\n            console.log(\"previousResult is : \" + this.previousResult);\n            console.log(\"difference is : \" + this.difference);\n            return \"\";\n        }\n}\n\n\n"],"mappings":"AAEA,OAAM,MAAOA,GAAG;EAOZ;EACAC,YAAmBC,KAAa,EAAEC,MAA2B,EAAEC,cAAmC;IAA/E,KAAAF,KAAK,GAALA,KAAK;IALjB,KAAAC,MAAM,GAAa,EAAE;IACrB,KAAAC,cAAc,GAAa,EAAE;IAC7B,KAAAC,UAAU,GAAa,EAAE;IAKxBF,MAAM,CAACG,OAAO,CAAC,CAACC,GAAW,EAAEC,GAAW,KAAI;MACxC,IAAI,CAACL,MAAM,CAACM,IAAI,CAACF,GAAG,CAAC;IACzB,CAAC,CAAC;IACFH,cAAc,CAACE,OAAO,CAAC,CAACC,GAAW,EAAEC,GAAW,KAAI;MAChD,IAAI,CAACJ,cAAc,CAACK,IAAI,CAACF,GAAG,CAAC;IACjC,CAAC,CAAC;EAEN;EAEOG,QAAQA,CAACC,GAAa;IAEzB,IAAIC,GAAG,GAAG,IAAIC,GAAG,EAAE;IAEnB;EACJ;EAEOC,QAAQA,CAAA;IACXC,OAAO,CAACC,GAAG,CAAC,aAAa,GAAG,IAAI,CAACd,KAAK,CAAC;IACvCa,OAAO,CAACC,GAAG,CAAC,cAAc,GAAG,IAAI,CAACb,MAAM,CAAC;IACzCY,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAACZ,cAAc,CAAC;IACzDW,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAACX,UAAU,CAAC;IACjD,OAAO,EAAE;EACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}