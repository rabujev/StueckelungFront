{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/form.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/slide-toggle\";\nfunction AmountInputFormComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Feld ist erforderlich\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AmountInputFormComponent_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"strong\");\n    i0.ɵɵtext(2, \"G\\u00FCltigen Betrag eingeben\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AmountInputFormComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, AmountInputFormComponent_div_4_div_1_Template, 3, 0, \"div\", 8);\n    i0.ɵɵtemplate(2, AmountInputFormComponent_div_4_div_2_Template, 3, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.amount.errors == null ? null : ctx_r0.amount.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.amount.errors == null ? null : ctx_r0.amount.errors[\"pattern\"]);\n  }\n}\nexport let AmountInputFormComponent = /*#__PURE__*/(() => {\n  class AmountInputFormComponent {\n    /**\n    Constructor with INJECTION for forms and our service\n    */\n    constructor(formBuilder, formService) {\n      this.formBuilder = formBuilder;\n      this.formService = formService;\n    }\n    //getters for our Form Controls, 1 for the amount and 1 for the toggle slider button \n    //\n    get amount() {\n      return this.inputForm.get('amount');\n    }\n    get backend() {\n      return this.inputForm.get('backend');\n    }\n    //On Init : Create form i.e. structure + validators  \n    //\n    ngOnInit() {\n      this.inputForm = this.formBuilder.group({\n        amount: new FormControl('', [Validators.required, Validators.pattern(\"^\\\\d+([\\\\.,][0-9]{1,2})?$\")]),\n        backend: new FormControl('')\n      });\n    }\n    //behaviour of submit button : if validation is passed => amount published to observer (tables)  via the Observable(Subject) in the injected service  \n    //\n    onSubmit() {\n      if (this.inputForm.valid) {\n        console.log(\"submitted (valid)\");\n        console.log(this.backend?.value);\n        this.formService.submittedForm.next([this.amount.value, this.backend.value]);\n      }\n    }\n  }\n  AmountInputFormComponent.ɵfac = function AmountInputFormComponent_Factory(t) {\n    return new (t || AmountInputFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FormService));\n  };\n  AmountInputFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AmountInputFormComponent,\n    selectors: [[\"app-amount-input-form\"]],\n    decls: 11,\n    vars: 2,\n    consts: [[1, \"mt-5\"], [1, \"container-fluid\"], [1, \"mb-4\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"amount\", \"type\", \"text\", \"placeholder\", \"Betrag in EUR\", \"required\", \"\", 1, \"form-control\", \"mb-4\", \"w-auto\"], [\"class\", \"alert alert-danger alert-dismissible fade show w-50\", 4, \"ngIf\"], [\"formControlName\", \"backend\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\", \"w-50\"], [4, \"ngIf\"]],\n    template: function AmountInputFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AmountInputFormComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(3, \"input\", 3);\n        i0.ɵɵtemplate(4, AmountInputFormComponent_div_4_Template, 3, 2, \"div\", 4);\n        i0.ɵɵelementStart(5, \"mat-slide-toggle\", 5);\n        i0.ɵɵtext(6, \"Backend Verarbeitung (Voreinstellung Frontend)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\")(8, \"br\");\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵtext(10, \"Berechnen\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.inputForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.amount.invalid && (ctx.amount.dirty || ctx.amount.touched));\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i4.MatSlideToggle]\n  });\n  return AmountInputFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}