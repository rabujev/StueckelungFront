{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ResultTableComponent = class ResultTableComponent {\n  //Injecting the object for possible denominations\n  // and using parameter Properties to simultaneously define it as a property\n  constructor(denomValues) {\n    this.denomValues = denomValues;\n    //Initial Map with denoms as keys and 0 as values for now\n    this.initialDenoms = this.denomValues.denomMap();\n    this.result = new Map(this.denomValues.denomMap());\n    this.difference = new Map();\n    this.useBackend = false;\n  }\n  ngOnInit() {}\n  //Fills result Map with the amounts of notes and coins \n  calcResult(total) {\n    if (this.useBackend) {} else {\n      let previousResult = new Map(this.result);\n      let rest = total;\n      //for each currency denomination, calculates how many of them fit in the rest amount and fills result map\n      for (let key of this.result.keys()) {\n        let value = Math.floor(rest / key);\n        this.result.set(key, value);\n        rest = rest % key;\n      }\n      //calculating the difference\n      if (previousResult.size > 0) {}\n    }\n  }\n};\nResultTableComponent = __decorate([Component({\n  selector: 'app-result-table',\n  templateUrl: './result-table.component.html',\n  styleUrls: ['./result-table.component.css']\n})], ResultTableComponent);","map":{"version":3,"names":["Component","ResultTableComponent","constructor","denomValues","initialDenoms","denomMap","result","Map","difference","useBackend","ngOnInit","calcResult","total","previousResult","rest","key","keys","value","Math","floor","set","size","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\result-table\\result-table.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-result-table',\n  templateUrl: './result-table.component.html',\n  styleUrls: ['./result-table.component.css']\n})\nexport class ResultTableComponent {\n\n  //Injecting the object for possible denominations\n  // and using parameter Properties to simultaneously define it as a property\n  constructor(private denomValues: DenomValues) {};\n\n  //Initial Map with denoms as keys and 0 as values for now\n  private initialDenoms: Map<number, number> = this.denomValues.denomMap();\n  \n  private result: Map<number, number> = new Map(this.denomValues.denomMap());\n\n  private difference: Map<number, string> = new Map();\n\n  private useBackend: boolean = false;\n\n\n  ngOnInit(): void {\n  }\n  \n  //Fills result Map with the amounts of notes and coins \n  calcResult(total: number) {\n\n    if (this.useBackend) {\n      \n     }\n    else {\n\n      let previousResult = new Map(this.result);\n      \n      let rest: number = total;\n      //for each currency denomination, calculates how many of them fit in the rest amount and fills result map\n      for (let key of this.result.keys()) {\n        let value: number = Math.floor(rest/key);\n        this.result.set(key, value)\n\n        rest = rest%key;\n      }\n      //calculating the difference\n      if (previousResult.size > 0) {\n\n      }\n\n      \n    }\n\n\n    \n\n  }\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAE/B;EACA;EACAC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAE/B;IACQ,KAAAC,aAAa,GAAwB,IAAI,CAACD,WAAW,CAACE,QAAQ,EAAE;IAEhE,KAAAC,MAAM,GAAwB,IAAIC,GAAG,CAAC,IAAI,CAACJ,WAAW,CAACE,QAAQ,EAAE,CAAC;IAElE,KAAAG,UAAU,GAAwB,IAAID,GAAG,EAAE;IAE3C,KAAAE,UAAU,GAAY,KAAK;EATY;EAY/CC,QAAQA,CAAA,GACR;EAEA;EACAC,UAAUA,CAACC,KAAa;IAEtB,IAAI,IAAI,CAACH,UAAU,EAAE,C,CAEnB,MACG;MAEH,IAAII,cAAc,GAAG,IAAIN,GAAG,CAAC,IAAI,CAACD,MAAM,CAAC;MAEzC,IAAIQ,IAAI,GAAWF,KAAK;MACxB;MACA,KAAK,IAAIG,GAAG,IAAI,IAAI,CAACT,MAAM,CAACU,IAAI,EAAE,EAAE;QAClC,IAAIC,KAAK,GAAWC,IAAI,CAACC,KAAK,CAACL,IAAI,GAACC,GAAG,CAAC;QACxC,IAAI,CAACT,MAAM,CAACc,GAAG,CAACL,GAAG,EAAEE,KAAK,CAAC;QAE3BH,IAAI,GAAGA,IAAI,GAACC,GAAG;;MAEjB;MACA,IAAIF,cAAc,CAACQ,IAAI,GAAG,CAAC,EAAE,C;;EAUjC;CAGD;AAnDYpB,oBAAoB,GAAAqB,UAAA,EALhCtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWxB,oBAAoB,CAmDhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}