{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nexport let AmountInputFormComponent = class AmountInputFormComponent {\n  constructor(formBuilder, formService) {\n    this.formBuilder = formBuilder;\n    this.formService = formService;\n  }\n  get amount() {\n    return this.inputForm.get('amount');\n  }\n  //Create the form structure with the validation\n  ngOnInit() {\n    this.inputForm = this.formBuilder.group({\n      amount: new FormControl('', [Validators.required, Validators.pattern(\"^\\\\d+([\\\\.,][0-9]{1,2})?$\")]),\n      backend: new FormControl('')\n    }); //js the backslash has to be escaped\n  }\n  //behaviour of submit button => if validation is passed \n  //=> amount published to observer (tables)  via the injected service\n  onSubmit() {\n    if (this.inputForm.valid) {\n      console.log(\"submitted (valid)\");\n      this.formService.useBackend = false;\n      this.formService.validAmount.next(this.amount.value);\n    }\n  }\n};\nAmountInputFormComponent = __decorate([Component({\n  selector: 'app-amount-input-form',\n  templateUrl: './amount-input-form.component.html',\n  styleUrls: ['./amount-input-form.component.css']\n})], AmountInputFormComponent);","map":{"version":3,"names":["Component","FormControl","Validators","AmountInputFormComponent","constructor","formBuilder","formService","amount","inputForm","get","ngOnInit","group","required","pattern","backend","onSubmit","valid","console","log","useBackend","validAmount","next","value","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\amount-input-form\\amount-input-form.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { FormService } from 'src/app/services/form.service';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatRadioModule} from '@angular/material/radio';\n\n\n\n\n\n@Component({\n  selector: 'app-amount-input-form',\n  templateUrl: './amount-input-form.component.html',\n  styleUrls: ['./amount-input-form.component.css'],\n  \n})\n\n\nexport class AmountInputFormComponent {\n\n  constructor(private formBuilder: FormBuilder,\n              private formService: FormService) {}\n\n\n  inputForm!: FormGroup;\n\n  get amount() {\n    return this.inputForm.get('amount')!;\n  }\n  \n\n  //Create the form structure with the validation\n  ngOnInit(): void {\n    this.inputForm = this.formBuilder.group({\n      amount: new FormControl('', [Validators.required, \n                                   Validators.pattern(\"^\\\\d+([\\\\.,][0-9]{1,2})?$\")]),\n      backend: new FormControl('')\n    });  //js the backslash has to be escaped\n  }\n    \n\n    //behaviour of submit button => if validation is passed \n    //=> amount published to observer (tables)  via the injected service\n  onSubmit() {\n    if (this.inputForm.valid) {\n      console.log(\"submitted (valid)\");\n      this.formService.useBackend = false;\n      this.formService.validAmount.next(this.amount.value); \n    }\n    \n  }\n\n  \n\n}\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AAmBzE,WAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAEnCC,YAAoBC,WAAwB,EACxBC,WAAwB;IADxB,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;EAAgB;EAK/C,IAAIC,MAAMA,CAAA;IACR,OAAO,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAE;EACtC;EAGA;EACAC,QAAQA,CAAA;IACN,IAAI,CAACF,SAAS,GAAG,IAAI,CAACH,WAAW,CAACM,KAAK,CAAC;MACtCJ,MAAM,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACU,QAAQ,EACnBV,UAAU,CAACW,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC;MAC9EC,OAAO,EAAE,IAAIb,WAAW,CAAC,EAAE;KAC5B,CAAC,CAAC,CAAE;EACP;EAGE;EACA;EACFc,QAAQA,CAAA;IACN,IAAI,IAAI,CAACP,SAAS,CAACQ,KAAK,EAAE;MACxBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC,IAAI,CAACZ,WAAW,CAACa,UAAU,GAAG,KAAK;MACnC,IAAI,CAACb,WAAW,CAACc,WAAW,CAACC,IAAI,CAAC,IAAI,CAACd,MAAM,CAACe,KAAK,CAAC;;EAGxD;CAID;AApCYnB,wBAAwB,GAAAoB,UAAA,EARpCvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAEhD,CAAC,C,EAGWvB,wBAAwB,CAoCpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}