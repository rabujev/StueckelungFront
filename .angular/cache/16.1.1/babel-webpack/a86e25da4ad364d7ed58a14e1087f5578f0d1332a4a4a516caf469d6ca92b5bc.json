{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AmountInputFormComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" First Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AmountInputFormComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" First Name must be at least 2 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AmountInputFormComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, AmountInputFormComponent_div_2_div_1_Template, 2, 0, \"div\", 7);\n    i0.ɵɵtemplate(2, AmountInputFormComponent_div_2_div_2_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.firstName.errors == null ? null : ctx_r0.firstName.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.firstName.errors == null ? null : ctx_r0.firstName.errors[\"minlength\"]);\n  }\n}\nfunction AmountInputFormComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Last Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AmountInputFormComponent_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Last Name must be at least 2 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AmountInputFormComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, AmountInputFormComponent_div_4_div_1_Template, 2, 0, \"div\", 7);\n    i0.ɵɵtemplate(2, AmountInputFormComponent_div_4_div_2_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastName.errors == null ? null : ctx_r1.lastName.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastName.errors == null ? null : ctx_r1.lastName.errors[\"minlength\"]);\n  }\n}\nfunction AmountInputFormComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Occupation is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AmountInputFormComponent_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Occupation must be at least 2 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AmountInputFormComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, AmountInputFormComponent_div_6_div_1_Template, 2, 0, \"div\", 7);\n    i0.ɵɵtemplate(2, AmountInputFormComponent_div_6_div_2_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.occupation.errors == null ? null : ctx_r2.occupation.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.occupation.errors == null ? null : ctx_r2.occupation.errors[\"minlength\"]);\n  }\n}\nexport class AmountInputFormComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.addForm = this.formBuilder.group({\n      firstName: new FormControl('', [Validators.required, Validators.minLength(2)]),\n      lastName: new FormControl('', [Validators.required, Validators.minLength(2)]),\n      occupation: new FormControl('', [Validators.required, Validators.minLength(2)])\n    });\n  }\n  onSubmit() {\n    console.log(this.addForm.get('firstName')?.value);\n    if (this.addForm.invalid) {\n      this.addForm.markAllAsTouched();\n    }\n  }\n  get firstName() {\n    return this.addForm.get('firstName');\n  }\n  get lastName() {\n    return this.addForm.get('lastName');\n  }\n  get occupation() {\n    return this.addForm.get('occupation');\n  }\n}\nAmountInputFormComponent.ɵfac = function AmountInputFormComponent_Factory(t) {\n  return new (t || AmountInputFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAmountInputFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AmountInputFormComponent,\n  selectors: [[\"app-amount-input-form\"]],\n  decls: 9,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"firstName\", \"type\", \"text\", \"placeholder\", \"First name\", \"required\", \"\", 1, \"form-control\", \"mb-4\", \"w-25\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"formControlName\", \"lastName\", \"type\", \"text\", \"placeholder\", \"Last name\", \"required\", \"\", 1, \"form-control\", \"mb-4\", \"w-25\"], [\"formControlName\", \"occupation\", \"type\", \"text\", \"placeholder\", \"Occupation\", \"required\", \"\", 1, \"form-control\", \"mb-4\", \"w-25\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"col-2\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n  template: function AmountInputFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AmountInputFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵtemplate(2, AmountInputFormComponent_div_2_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵtemplate(4, AmountInputFormComponent_div_4_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵtemplate(6, AmountInputFormComponent_div_6_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementStart(7, \"button\", 5);\n      i0.ɵɵtext(8, \"Save\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.inputForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.firstName.invalid && (ctx.firstName.dirty || ctx.firstName.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.lastName.invalid && (ctx.lastName.dirty || ctx.lastName.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.occupation.invalid && (ctx.occupation.dirty || ctx.occupation.touched));\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AmountInputFormComponent_div_2_div_1_Template","AmountInputFormComponent_div_2_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","firstName","errors","AmountInputFormComponent_div_4_div_1_Template","AmountInputFormComponent_div_4_div_2_Template","ctx_r1","lastName","AmountInputFormComponent_div_6_div_1_Template","AmountInputFormComponent_div_6_div_2_Template","ctx_r2","occupation","AmountInputFormComponent","constructor","formBuilder","ngOnInit","addForm","group","required","minLength","onSubmit","console","log","get","value","invalid","markAllAsTouched","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","AmountInputFormComponent_Template","rf","ctx","ɵɵlistener","AmountInputFormComponent_Template_form_ngSubmit_0_listener","ɵɵelement","AmountInputFormComponent_div_2_Template","AmountInputFormComponent_div_4_Template","AmountInputFormComponent_div_6_Template","inputForm","dirty","touched"],"sources":["C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\amount-input-form\\amount-input-form.component.ts","C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\core\\amount-input-form\\amount-input-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-amount-input-form',\n  templateUrl: './amount-input-form.component.html',\n  styleUrls: ['./amount-input-form.component.css']\n})\nexport class AmountInputFormComponent {\n\n  addForm!: FormGroup;\n  \n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.addForm = this.formBuilder.group({\n      firstName: new FormControl('', [Validators.required, Validators.minLength(2)]),\n      lastName: new FormControl('', [Validators.required, Validators.minLength(2)]),\n      occupation: new FormControl('', [Validators.required, Validators.minLength(2)]),\n    });\n  }\n\n  onSubmit() {\n    console.log(this.addForm.get('firstName')?.value);\n\n    if (this.addForm.invalid) {\n      this.addForm.markAllAsTouched();\n    }\n  }\n\n  get firstName() {\n    return this.addForm.get('firstName')!;\n  }\n  get lastName() {\n    return this.addForm.get('lastName')!;\n  }\n  get occupation() {\n    return this.addForm.get('occupation')!;\n  }\n}\n","<form [formGroup]=\"inputForm\" (ngSubmit)=\"onSubmit()\">\n    <!--\n    Hidden field to bind to the id NECESSARY because it needs to be in the body to know which cat to edit-->\n    <!-- <input type=\"hidden\" th:field=\"*{id}\">-->\n\n    <!-- Hidden field for img necessary so it doesn't overwrite an existing image for this cat during edit-->\n    \n    <!-- <input type=\"hidden\" th:field=\"*{imagePath}\">-->\n\n    <input formControlName=\"firstName\" type=\"text\"  class=\"form-control mb-4 w-25\" placeholder=\"First name\" required>\n    \n        <!-- VALIDATION ERROR MESSAGES FOR FIRSTNAME -->\n    <div     *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"firstName.errors?.['required']\">\n            First Name is required\n        </div>\n        <div *ngIf=\"firstName.errors?.['minlength']\">\n            First Name must be at least 2 characters long\n        </div>\n    </div>\n\n    <input formControlName=\"lastName\" type=\"text\"  class=\"form-control mb-4 w-25\" placeholder=\"Last name\" required>\n    \n        <!-- VALIDATION ERROR MESSAGES FOR FIRSTNAME -->\n    <div     *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"lastName.errors?.['required']\">\n            Last Name is required\n        </div>\n        <div *ngIf=\"lastName.errors?.['minlength']\">\n            Last Name must be at least 2 characters long\n        </div>\n    </div>\n    <input formControlName=\"occupation\" type=\"text\"  class=\"form-control mb-4 w-25\" placeholder=\"Occupation\" required>\n    \n        <!-- VALIDATION ERROR MESSAGES FOR occupation -->\n    <div     *ngIf=\"occupation.invalid && (occupation.dirty || occupation.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"occupation.errors?.['required']\">\n            Occupation is required\n        </div>\n        <div *ngIf=\"occupation.errors?.['minlength']\">\n            Occupation must be at least 2 characters long\n        </div>\n    </div>\n\n\n    <!-- Submit Button -->\n    <button type=\"submit\" class=\"btn btn-info col-2\">Save</button>\n\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}