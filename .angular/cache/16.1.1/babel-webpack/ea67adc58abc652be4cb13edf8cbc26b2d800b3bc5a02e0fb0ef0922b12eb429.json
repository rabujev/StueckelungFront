{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FormService {\n  constructor() {}\n  //Fills result Map with the amounts of notes and coins \n  calcResult(total, useBack, result) {\n    if (useBack) {} else {\n      let previousResult = new Map(result);\n      let rest = total;\n      //for each currency denomination, calculates how many of them fit in the rest amount and fills result map\n      for (let key of result.keys()) {\n        let value = Math.floor(rest / key);\n        result.set(key, value); //should modify result as a side effect \n        rest = rest % key;\n      }\n      //calculating the difference\n      if (previousResult.size > 0) {}\n    }\n  }\n}\nFormService.ɵfac = function FormService_Factory(t) {\n  return new (t || FormService)();\n};\nFormService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FormService,\n  factory: FormService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["FormService","constructor","calcResult","total","useBack","result","previousResult","Map","rest","key","keys","value","Math","floor","set","size","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Jamal-external-drive\\Desktop\\CODE JAMAL\\CurrencyDenominationCalc\\frontend\\src\\app\\services\\form.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n\n  constructor() { }\n\n    //Fills result Map with the amounts of notes and coins \n    calcResult(total: number, useBack: boolean, result: Map<number, number>) {\n\n      if (useBack) {\n        \n       }\n      else {\n  \n        let previousResult = new Map(result);\n        \n        \n        let rest: number = total;\n        //for each currency denomination, calculates how many of them fit in the rest amount and fills result map\n        for (let key of result.keys()) {\n          let value: number = Math.floor(rest/key);\n          result.set(key, value);  //should modify result as a side effect \n\n          rest = rest%key;\n        }\n        //calculating the difference\n        if (previousResult.size > 0) {\n  \n        }\n  \n        \n      }\n  \n  \n      \n  \n    }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,WAAW;EAEtBC,YAAA,GAAgB;EAEd;EACAC,UAAUA,CAACC,KAAa,EAAEC,OAAgB,EAAEC,MAA2B;IAErE,IAAID,OAAO,EAAE,C,CAEX,MACG;MAEH,IAAIE,cAAc,GAAG,IAAIC,GAAG,CAACF,MAAM,CAAC;MAGpC,IAAIG,IAAI,GAAWL,KAAK;MACxB;MACA,KAAK,IAAIM,GAAG,IAAIJ,MAAM,CAACK,IAAI,EAAE,EAAE;QAC7B,IAAIC,KAAK,GAAWC,IAAI,CAACC,KAAK,CAACL,IAAI,GAACC,GAAG,CAAC;QACxCJ,MAAM,CAACS,GAAG,CAACL,GAAG,EAAEE,KAAK,CAAC,CAAC,CAAE;QAEzBH,IAAI,GAAGA,IAAI,GAACC,GAAG;;MAEjB;MACA,IAAIH,cAAc,CAACS,IAAI,GAAG,CAAC,EAAE,C;;EAUjC;;AAlCSf,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}